name: BayNet CI

on:
  pull_request:
    branches:
    - master

jobs:
  test_with_pytest:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1
    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v1
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Install dependencies
      run: |
        pip install -e .[ci]
    - name: Test with pytest
      run: |
        python -m pytest -vv --cov=baynet --cov-fail-under=95  tests/

  lint_with_pylint:
      runs-on: ${{ matrix.os }}
      strategy:
          max-parallel: 1
          matrix:
              python-version: [3.7]
              os: [ubuntu-latest]

      steps:
          -   uses: actions/checkout@v1
          -   name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
          -   name: Install pylint
              run: |
                  python -m pip install --upgrade pip
                  pip install pylint
          -   name: Lint with pylint
              run: |
                  python run_pylint.py

  format_with_black:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install black
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Format with black
      run: |
        python -m black --check -l 100 -t py37 -S baynet/
        python -m black --check -l 100 -t py37 -S tests/

  type_check_with_mypy:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install mypy
      run: |
        python -m pip install --upgrade pip
        pip install mypy
    - name: Type check with mypy
      run: |
        python run_mypy.py


  docstyle:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pydocstyle
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle
    - name: Docs formatting check with pdocstyle
      run: |
        python run_pydocstyle.py
